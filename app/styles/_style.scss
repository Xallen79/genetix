$top-row-height: 25vh;
@mixin strokeme($color) {
    text-shadow: -1px -1px 0 $color, 1px -1px 0 $color, -1px 1px 0 $color, 1px 1px 0 $color;
}

@mixin gradient {
    //background: $gray-light;
    background: opacify($gray-light, 0.4);
    background: -moz-linear-gradient(-45deg, opacify($gray-light, 0.4) 0%, opacify($gray-dark, 0.4) 30%, opacify($gray-dark, 0.4) 100%);
    background: -webkit-gradient(left top, right bottom, color-stop(0%, opacify($gray-light, 0.4)), color-stop(30%, opacify($gray-dark, 0.4)), color-stop(100%, opacify($gray-dark, 0.4)));
    background: -webkit-linear-gradient(-45deg, opacify($gray-light, 0.4) 0%, opacify($gray-light, 0.4) 30%, opacify($gray-dark, 0.4) 100%);
}

@mixin maximize-row {
    margin-left: 0 !important;
    margin-right: 0 !important;
    [class*="col-"] {
        padding-left: .25vh !important;
        padding-right: .25vh !important;
    }
    [class*="col-"].nopadding {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }
}

@mixin attribute-progress-bars {
    .progress {
        position: relative;
        border: 1px solid black;
        -webkit-box-shadow: 2px 2px 0px 0px rgba(0, 0, 0, 0.75);
        -moz-box-shadow: 2px 2px 0px 0px rgba(0, 0, 0, 0.75);
        box-shadow: 2px 2px 0px 0px rgba(0, 0, 0, 0.75);
    }
    .progress-bar {
        font-weight: bold;
        font-size: 1.1vw;
        //min-width: 2%;
        min-width: 2px;
        font-family: "Courier New", Courier, monospace;
        border-right: 1px solid black;
        >span.amounts {
            overflow-x: visible;
            white-space: nowrap;
            position: absolute;
            right: .25vw;
        }
        >span.workers,
        >span.breeders {
            overflow-x: visible;
            white-space: nowrap;
            position: absolute;
            left: .25vw;
            >i {
                font-size: .85vw;
                width: .85vw;
            }
        }
        >i {
            overflow-x: visible;
            white-space: nowrap;
            position: absolute;
            left: .25vw;
        }
    }
    div[data-attr="STR"] {
        .progress {
            background-color: lighten($attr-str, 60%);
        }
        .progress-bar {
            background-color: $attr-str;
            @include strokeme(black)
        }
    }
    div[data-attr="INT"] {
        .progress {
            background-color: lighten($attr-int, 60%);
        }
        .progress-bar {
            background-color: $attr-int;
            @include strokeme(black)
        }
    }
    div[data-attr="END"] {
        .progress {
            background-color: lighten($attr-end, 25%);
        }
        .progress-bar {
            background-color: $attr-end;
            @include strokeme(black)
        }
    }
    div[data-attr="CHR"] {
        .progress {
            background-color: lighten($attr-chr, 35%);
        }
        .progress-bar {
            background-color: $attr-chr;
            @include strokeme(black);
        }
    }
    div[data-attr="LCK"] {
        .progress {
            background-color: lighten($attr-lck, 55%);
        }
        .progress-bar {
            background-color: $attr-lck;
            @include strokeme($attr-lck)
        }
    }
    div {
        .progress {
            background-color: lighten($brand-primary, 60%);
        }
        .progress-bar {
            background-color: $brand-primary;
            @include strokeme($brand-primary)
        }
    }
    .progress {
        margin: 5px 0px 5px 0px;
    }
}

/// Test if `$value` is a valid direction
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
    $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
    $is-angle: type-of($value)=='number' and index('deg' 'grad' 'turn' 'rad', unit($value));
    @return $is-keyword or $is-angle;
}

@mixin linear-gradient($direction, $color-stops...) {
    // Direction has been omitted and happens to be a color-stop
    @if is-direction($direction)==false {
        $color-stops: $direction, $color-stops;
        $direction: 180deg;
    }
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
}

html {
    @include maximize-row();
}

body {
    overflow: hidden;
}

h5 {
    font-size: .85vw;
}

#content {
    height: 100vh;
}

#inner-content {
    padding: 0.5vw 0.5vh;
    //border: 2px solid $brand-info;
    height: calc(100vh - #{$navbar-height});
    //height: 90vh;
}

.game-menu {
    max-height: $navbar-height;
}

.building-list-button {
    float: left;
    font-size: .8em;
    width: 30%;
    margin: .1vh .1vw .1vh .1vw;
    button {
        width: 100%;
        margin: 0;
    }
}

.topRow {
    height: $top-row-height;
    margin-bottom: .5vh;
}

@include attribute-progress-bars;
.progress-playerbox-title {
    margin: 0px;
    height: 2.4vh;
}

.genomeEditor {
    font-size: .7vw;
    img.gene {
        border: .1vh solid black;
    }
    input {
        color: black;
        width: 4em;
    }
}

.resource-list {
    @include maximize-row();
    //overflow-y: scroll;
    height: 30vh;
    h5 {
        margin: 8px 0px 1px 0px;
        font-size: .8vw;
    }
}

.population-list {
    .mortal-name {
        padding: 2px;
        font-size: .8vw;
    }
    .mortal-genome {
        .genomeEditor {
            width: 10vw;
        }
    }
    @include maximize-row();
    .genomeEditor {
        margin: 2px !important;
    }
}

.perk-tooltip,
.achievement-tooltip,
.building-tooltip {
    p {
        margin: 3px;
    }
    [data-attr="STR"] {
        color: $attr-str;
        @include strokeme(black)
    }
    [data-attr="INT"] {
        color: $attr-int;
        @include strokeme(black)
    }
    [data-attr="END"] {
        color: $attr-end;
        @include strokeme(black)
    }
    [data-attr="CHR"] {
        color: $attr-chr;
        @include strokeme(black)
    }
    [data-attr="LCK"] {
        color: $attr-lck;
        @include strokeme(black)
    }
    h5 {
        margin: 3px;
        color: lightblue;
    }
    div {
        max-width: 40vw;
    }
}

.achievement-list {
    margin: 5px;
    padding: 2px;
    //border: 1px solid black;
    //background-color: $gray;
    .achievement-rank-row {
        @include maximize-row();
    }
    .achievement-cell,
    .achievement-rank-cell {
        border: 1px solid black;
        padding: 2px;
        min-height: 30px;
        font-size: .75vw;
    }
    .achievement-cell {
        @include linear-gradient(180deg, $gray-dark 15%, black 100%);
        padding: 5px;
        margin: 2px;
    }
    .achievement-rank-cell {
        line-height: 1.1vw;
        padding: 2px;
        margin-bottom: 3px;
        @include linear-gradient(135deg, $gray-light 0%, $gray-dark 30%, $gray-dark 100%);
        text-align: center;
    }
    .achievement-rank-STR {
        @include linear-gradient(180deg, $attr-str 15%, black 100%)
    }
    .achievement-rank-INT {
        @include linear-gradient(180deg, $attr-int 15%, black 100%)
    }
    .achievement-rank-END {
        @include linear-gradient(180deg, $attr-end 15%, black 100%)
    }
    .achievement-rank-CHR {
        @include linear-gradient(180deg, $attr-chr 15%, black 100%)
    }
    .achievement-rank-LCK {
        @include linear-gradient(180deg, $attr-lck 15%, black 100%)
    }
}

// calc came from trial and error, i couldn't figure out how to calculate it correctly.
.population-container {
    height: calc(100vh - #{$top-row-height} - 3.5vh - #{$navbar-height} - 18px);
    overflow-y: auto;
    overflow-x: hidden;
}

.population-container,
.breeder-container {
    @include maximize-row();
    h5 {
        margin: 2px 0px 1px 0px;
    }
    .nav-pills>li>a {
        /* adjust padding for height*/
        padding-top: 4px;
        padding-bottom: 4px;
    }
    button.btn-primary {
        @include linear-gradient(180deg, lighten($brand-primary, 20%) 0%, $brand-primary 30%, $brand-primary 100%);
    }
    button.btn-primary:hover {
        @include linear-gradient(180deg, lighten($brand-primary, 30%) 0%, lighten($brand-primary, 10%) 30%, lighten($brand-primary, 10%) 100%);
    }
    bloqhead-population-panel {
        thead {
            th {
                text-align: center;
                font-size: .8em;
            }
        }
        tbody {
            td {
                font-size: .7em;
            }
        }
    }
    table.genomeEditor {
        margin-top: .1vh;
        margin-bottom: .1vh;
        width: 100%;
        tbody {
            td {
                background-color: black;
                font-family: "Courier New", Courier, monospace;
                text-align: center;
            }
            td:nth-child(1) {
                @include linear-gradient(180deg, $attr-str 15%, black 100%)
            }
            td:nth-child(2) {
                @include linear-gradient(180deg, $attr-int 15%, black 100%)
            }
            td:nth-child(3) {
                @include linear-gradient(180deg, $attr-end 15%, black 100%)
            }
            td:nth-child(4) {
                @include linear-gradient(180deg, $attr-chr 15%, black 100%)
            }
            td:nth-child(5) {
                @include linear-gradient(180deg, $attr-lck 15%, black 100%)
            }
        }
        img {
            min-width: 100%;
        }
    }
}

.bloqhead-component {
    @include linear-gradient(135deg, $gray-light 0%, $gray-dark 30%, $gray-dark 100%);
    margin-top: 5px;
    margin-bottom: 5px;
    border: 1px solid black;
    padding: 5px;
    -webkit-box-shadow: 10px 10px 5px -5px rgba(0, 0, 0, 0.75);
    -moz-box-shadow: 10px 10px 5px -5px rgba(0, 0, 0, 0.75);
    box-shadow: 10px 10px 5px -5px rgba(0, 0, 0, 0.75);
}

bloqhead-log {
    .log-component {
        font-size: .8vw;
        height: 100%;
        overflow-y: scroll;
        .color-general {
            color: #2ECC91;
            background-color: #374C32;
        }
        .color-breed {
            color: #be90d4;
            background-color: #32334C;
        }
        .color-achievement {
            color: #ff4500;
            background-color: #4C0701;
        }
        .color-work {
            color: #638bb3;
            background-color: #01194c;
        }
        .list-group {
            margin: 0;
        }
    }
}

bloqhead-building-list,
bloqhead-worker-list {
    h5 {
        margin: 8px 0px 1px 0px;
        font-size: .8vw;
    }
    button.btn-primary {
        @include linear-gradient(180deg, lighten($brand-primary, 20%) 0%, $brand-primary 30%, $brand-primary 100%);
    }
    button.btn-primary:hover {
        @include linear-gradient(180deg, lighten($brand-primary, 30%) 0%, lighten($brand-primary, 10%) 30%, lighten($brand-primary, 10%) 100%);
    }
}

bloqhead-player-box {
    .player-box {
        height: 100%;
        border: 2px solid $gray-darker;
        margin-bottom: .5vh;
    }
    .box-title {
        background-color: $gray-dark;
        margin: 0;
        padding-left: .2vw;
        padding-right: .1vw;
        padding-top: .1vh;
        padding-bottom: .1vh;
        font-size: 1.1vw;
        height: 12%;
        vertical-align: middle;
        border-bottom: 2px solid $gray-darker;
    }
    .player-content {
        padding-left: .25vw;
        padding-right: .25vw;
        padding-top: .25vh;
        padding-bottom: .25vh;
        height: 88%;
        overflow-x: hidden;
        overflow-y: auto;
        @include linear-gradient(0deg, $gray-light 0%, $gray-dark 30%, $gray-dark 100%);
    }
}

.fullH {
    height: 100%;
}


/* Specify styling for tooltip contents */

.tooltip .tooltip-inner {
    @include linear-gradient(135deg, $gray-light 0%, $gray-dark 30%, $gray-dark 100%);
    border: 1px solid black;
    -webkit-box-shadow: 10px 10px 5px -5px rgba(0, 0, 0, 0.75);
    -moz-box-shadow: 10px 10px 5px -5px rgba(0, 0, 0, 0.75);
    box-shadow: 10px 10px 5px -5px rgba(0, 0, 0, 0.75);
}

.tooltip .tooltip-inner .list-group-item {
    background-color: rgba(0, 0, 0, 0);
    padding: 0;
}


/* Hide arrow */

.tooltip .tooltip-arrow {
    display: none;
}


/* Needed for tooltips to work with disabled buttons */

[disabled] {
    pointer-events: none;
}

.male-color {
    color: dodgerblue;
}

.female-color {
    color: hotpink;
}